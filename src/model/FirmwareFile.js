/**
 * api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Api) {
      root.Api = {};
    }
    root.Api.FirmwareFile = factory(root.Api.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The FirmwareFile model module.
   * @module model/FirmwareFile
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>FirmwareFile</code>.
   * @alias module:model/FirmwareFile
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>FirmwareFile</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FirmwareFile} obj Optional instance to populate.
   * @return {module:model/FirmwareFile} The populated <code>FirmwareFile</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('firmware_id')) {
        obj['firmware_id'] = ApiClient.convertToType(data['firmware_id'], 'Number');
      }
      if (data.hasOwnProperty('file_name')) {
        obj['file_name'] = ApiClient.convertToType(data['file_name'], 'String');
      }
      if (data.hasOwnProperty('checksum')) {
        obj['checksum'] = ApiClient.convertToType(data['checksum'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('signed_url')) {
        obj['signed_url'] = ApiClient.convertToType(data['signed_url'], 'String');
      }
      if (data.hasOwnProperty('meta')) {
        obj['meta'] = ApiClient.convertToType(data['meta'], {'String': 'String'});
      }
      if (data.hasOwnProperty('created_at')) {
        obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {Number} firmware_id
   */
  exports.prototype['firmware_id'] = undefined;
  /**
   * @member {String} file_name
   */
  exports.prototype['file_name'] = undefined;
  /**
   * @member {String} checksum
   */
  exports.prototype['checksum'] = undefined;
  /**
   * @member {String} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {String} signed_url
   */
  exports.prototype['signed_url'] = undefined;
  /**
   * @member {Object.<String, String>} meta
   */
  exports.prototype['meta'] = undefined;
  /**
   * @member {String} created_at
   */
  exports.prototype['created_at'] = undefined;



  return exports;
}));


