/**
 * api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FirmwareFile model module.
 * @module model/FirmwareFile
 * @version 0.0.1
 */
class FirmwareFile {
    /**
     * Constructs a new <code>FirmwareFile</code>.
     * @alias module:model/FirmwareFile
     */
    constructor() { 
        
        FirmwareFile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FirmwareFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FirmwareFile} obj Optional instance to populate.
     * @return {module:model/FirmwareFile} The populated <code>FirmwareFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FirmwareFile();

            if (data.hasOwnProperty('firmware_id')) {
                obj['firmware_id'] = ApiClient.convertToType(data['firmware_id'], 'Number');
            }
            if (data.hasOwnProperty('file_name')) {
                obj['file_name'] = ApiClient.convertToType(data['file_name'], 'String');
            }
            if (data.hasOwnProperty('checksum')) {
                obj['checksum'] = ApiClient.convertToType(data['checksum'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('signed_url')) {
                obj['signed_url'] = ApiClient.convertToType(data['signed_url'], 'String');
            }
            if (data.hasOwnProperty('meta')) {
                obj['meta'] = ApiClient.convertToType(data['meta'], {'String': 'String'});
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} firmware_id
 */
FirmwareFile.prototype['firmware_id'] = undefined;

/**
 * @member {String} file_name
 */
FirmwareFile.prototype['file_name'] = undefined;

/**
 * @member {String} checksum
 */
FirmwareFile.prototype['checksum'] = undefined;

/**
 * @member {String} type
 */
FirmwareFile.prototype['type'] = undefined;

/**
 * @member {String} signed_url
 */
FirmwareFile.prototype['signed_url'] = undefined;

/**
 * @member {Object.<String, String>} meta
 */
FirmwareFile.prototype['meta'] = undefined;

/**
 * @member {String} created_at
 */
FirmwareFile.prototype['created_at'] = undefined;






export default FirmwareFile;

