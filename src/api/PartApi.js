/**
 * api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PartRequest from '../model/PartRequest';
import PartResponse from '../model/PartResponse';

/**
* Part service.
* @module api/PartApi
* @version 0.0.1
*/
export default class PartApi {

    /**
    * Constructs a new PartApi. 
    * @alias module:api/PartApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createPart operation.
     * @callback module:api/PartApi~createPartCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PartResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create part
     * @param {String} version api version
     * @param {module:model/PartRequest} body create part body parameters
     * @param {module:api/PartApi~createPartCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PartResponse}
     */
    createPart(version, body, callback) {
      let postBody = body;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling createPart");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createPart");
      }

      let pathParams = {
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['*/*', 'application/json'];
      let returnType = PartResponse;
      return this.apiClient.callApi(
        '/{version}/part', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
